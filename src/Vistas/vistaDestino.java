/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Vistas;

import AccesoADatos.DestinoData;
import Entidades.Destino;
import com.toedter.calendar.JDateChooser;
import java.awt.Component;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Date;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import java.lang.Exception;



/**
 *
 * @author Lourdes
 */
public class vistaDestino extends javax.swing.JInternalFrame {
public static Destino origenSeleccionado = new Destino();
public static Destino destinoSeleccionado = new Destino();
public static Date fechInicio;
public static Date fechFin;
public static String temporada;
private DestinoData destData = new DestinoData();
public boolean datosValidos = false;
    /**
     * Creates new form vistaDestino
     */
    public vistaDestino() {
        initComponents();
        cargarComboBox(cbOrigen);
        cargarComboBox(cbDestino);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        contenedor = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        cbOrigen = new javax.swing.JComboBox<>();
        cbDestino = new javax.swing.JComboBox<>();
        fechaInicio = new com.toedter.calendar.JDateChooser();
        fechaFin = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        jbSiguiente = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setClosable(true);
        setTitle("Paquete Tur√≠stico");
        setPreferredSize(new java.awt.Dimension(800, 600));

        contenedor.setBackground(new java.awt.Color(39, 134, 188));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/calendar.png"))); // NOI18N

        cbOrigen.setBackground(new java.awt.Color(255, 255, 255));
        cbOrigen.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        cbOrigen.setForeground(new java.awt.Color(0, 0, 0));
        cbOrigen.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        cbDestino.setBackground(new java.awt.Color(255, 255, 255));
        cbDestino.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        cbDestino.setForeground(new java.awt.Color(0, 0, 0));

        fechaInicio.setBackground(new java.awt.Color(255, 255, 255));
        fechaInicio.setForeground(new java.awt.Color(0, 0, 0));

        fechaFin.setBackground(new java.awt.Color(255, 255, 255));
        fechaFin.setForeground(new java.awt.Color(0, 0, 0));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/viaje-y-turismo(1).png"))); // NOI18N
        jLabel1.setText("ELIJA SU DESTINO");
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLabel1.setIconTextGap(10);

        jbSiguiente.setBackground(new java.awt.Color(51, 255, 153));
        jbSiguiente.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jbSiguiente.setText("SIGUIENTE");
        jbSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSiguienteActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("DESTINO");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("FECHA DE SALIDA");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("FECHA DE REGRESO");

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/ubicacion.png"))); // NOI18N

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/ubicacion.png"))); // NOI18N
        jLabel7.setText("ORIGEN");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/transferir(1).png"))); // NOI18N

        javax.swing.GroupLayout contenedorLayout = new javax.swing.GroupLayout(contenedor);
        contenedor.setLayout(contenedorLayout);
        contenedorLayout.setHorizontalGroup(
            contenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contenedorLayout.createSequentialGroup()
                .addGap(198, 198, 198)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(contenedorLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(contenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(contenedorLayout.createSequentialGroup()
                        .addGroup(contenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                        .addGroup(contenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(contenedorLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel6))
                            .addGroup(contenedorLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(38, 38, 38)
                                .addComponent(cbDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(53, 53, 53))
                    .addGroup(contenedorLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(contenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4))
                        .addGap(49, 49, 49)
                        .addGroup(contenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fechaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fechaFin, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(47, 47, 47)
                        .addComponent(jLabel8)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, contenedorLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbSiguiente, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(78, 78, 78))
        );
        contenedorLayout.setVerticalGroup(
            contenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contenedorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(contenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(contenedorLayout.createSequentialGroup()
                        .addGroup(contenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(contenedorLayout.createSequentialGroup()
                                .addGap(129, 129, 129)
                                .addComponent(cbOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(contenedorLayout.createSequentialGroup()
                                .addGap(124, 124, 124)
                                .addComponent(cbDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(contenedorLayout.createSequentialGroup()
                                .addGap(118, 118, 118)
                                .addComponent(jLabel2)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)
                        .addGroup(contenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(fechaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(62, 62, 62)
                        .addGroup(contenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(fechaFin, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(55, 55, 55))
                    .addGroup(contenedorLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(contenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(contenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel7)
                                .addComponent(jLabel3))
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel8)
                        .addGap(31, 31, 31)))
                .addComponent(jbSiguiente, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(contenedor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(contenedor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSiguienteActionPerformed
       if (validarCamposVacios(contenedor)) {
        JOptionPane.showMessageDialog(this, "Debe llenar todos los datos");
        return;
    }


    guardar();

  
    if (datosValidos) {
        vistaEstadia v = new vistaEstadia();
        v.setVisible(true);
        Menu.escritorio.add(v);
        this.dispose();
    }
           
       
       
    }//GEN-LAST:event_jbSiguienteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Destino> cbDestino;
    private javax.swing.JComboBox<Destino> cbOrigen;
    private javax.swing.JPanel contenedor;
    private com.toedter.calendar.JDateChooser fechaFin;
    private com.toedter.calendar.JDateChooser fechaInicio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JButton jbSiguiente;
    // End of variables declaration//GEN-END:variables

private void cargarComboBox(JComboBox c){
     for (Destino dest : destData.listarDestinos() ) {
         c.addItem(dest);
     }
}

private boolean validarCamposVacios(JPanel jpanel) {
    for (Component c : jpanel.getComponents()) {
        if (c instanceof JDateChooser) {
            JDateChooser t = (JDateChooser) c;
            if (t.getDate() == null) {  // Verifica si el campo est√° vac√≠o
                return true;
            }
        }
        
        if (c instanceof JComboBox) {
            JComboBox<?> combo = (JComboBox<?>) c;
            if (combo.getSelectedItem() == null || combo.getSelectedIndex() == -1) { // Verifica si no hay selecci√≥n
                return true;
            }
        }
        
    }
    return false; // No hay campos vac√≠os
}

private void guardar() {
    try {
        java.util.Date fechainicio = fechaInicio.getDate();
        java.util.Date fechafin = fechaFin.getDate();
         datosValidos = false;
        if (validarCamposVacios(contenedor)) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar todos los campos");
           
            return;
        }
        
        // Validar que la fecha de inicio no sea posterior a la fecha de fin
        if (fechainicio == null || fechafin == null || fechainicio.after(fechafin)) {
            JOptionPane.showMessageDialog(this, "Debe ingresar una fecha valida");
         
            return; 
        }
        
        // Asignar valores si las fechas son correctas
        origenSeleccionado = (Destino) cbOrigen.getSelectedItem();
        destinoSeleccionado = (Destino) cbDestino.getSelectedItem();
        fechInicio = fechainicio;
        fechFin = fechafin;
        
     
        temporada();
        datosValidos = true;
    } catch (NullPointerException ex) {
        JOptionPane.showMessageDialog(this, "Error al intentar guardar datos.");
        
    }
}


private void temporada() {
    // Convertimos Date a LocalDate
    LocalDate inicio = fechInicio.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();

    // Definici√≥n de fechas para temporadas
    LocalDate inicioTemporadaAltaInvierno = LocalDate.of(inicio.getYear(), 12, 15);
    LocalDate finTemporadaAltaInvierno = LocalDate.of(inicio.getYear() + 1, 2, 28);
    LocalDate inicioTemporadaAltaJulio = LocalDate.of(inicio.getYear(), 7, 1);
    LocalDate finTemporadaAltaJulio = LocalDate.of(inicio.getYear(), 7, 31);

    LocalDate inicioPrimavera = LocalDate.of(inicio.getYear(), 9, 21);
    LocalDate finPrimavera = LocalDate.of(inicio.getYear(), 12, 20);

    LocalDate semanaSantaInicio = LocalDate.of(inicio.getYear(), 3, 24);
    LocalDate semanaSantaFin = LocalDate.of(inicio.getYear(), 3, 31);

    // Determinaci√≥n de la temporada
    if ((inicio.isAfter(inicioTemporadaAltaInvierno) && inicio.isBefore(finTemporadaAltaInvierno))
        || (inicio.isAfter(inicioTemporadaAltaJulio) && inicio.isBefore(finTemporadaAltaJulio))) {
        temporada = "temporada_alta";
    } else if (inicio.isAfter(inicioPrimavera) && inicio.isBefore(finPrimavera)
        || (inicio.isAfter(semanaSantaInicio) && inicio.isBefore(semanaSantaFin))) {
        temporada = "temporada_media";
    } else {
        temporada = "temporada_baja";
    }
}

}
