/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Vistas;

import AccesoADatos.AlojamientoData;
import AccesoADatos.ClienteData;
import AccesoADatos.ClientePaqueteData;
import AccesoADatos.EstadiaData;
import AccesoADatos.MenuData;
import AccesoADatos.PaqueteData;
import AccesoADatos.PasajeData;
import AccesoADatos.TransporteData;
import Entidades.Alojamiento;
import Entidades.ClientePaquete;
import Entidades.Estadia;
import Entidades.MenuPension;
import Entidades.Paquete;
import Entidades.Pasaje;
import Entidades.Transporte;
import static Vistas.vistaPasaje.pasajeSeleccionado;
import static Vistas.vistaPasaje.transporteSeleccionado;
import static Vistas.vistaMenuPension.menuSeleccionado;
import static Vistas.vistaDestino.destinoSeleccionado;
import static Vistas.vistaDestino.origenSeleccionado;
import static Vistas.vistaDestino.fechFin;
import static Vistas.vistaDestino.fechInicio;
import static Vistas.vistaEstadia.alojamientoSeleccionado;
import static Vistas.vistaEstadia.estadiaSeleccionada;
import static Vistas.vistaMenuPension.menuSeleccionado;
import static Vistas.vistaCliente.clienteSeleccionado;
import static Vistas.vistaCliente.medioPago;
import static Vistas.vistaDestino.destinoSeleccionado;
import static Vistas.vistaDestino.origenSeleccionado;
import static Vistas.vistaDestino.temporada;
import static Vistas.vistaEstadia.alojamientoSeleccionado;
import static Vistas.vistaEstadia.estadiaSeleccionada;
import com.toedter.calendar.JDateChooser;
import java.awt.Component;
import java.util.List;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JSpinner;
import javax.swing.JTextField;
import java.sql.Date;

import java.time.LocalDate;
import java.time.ZoneId;
import java.time.temporal.ChronoUnit;
import javax.swing.ButtonGroup;

/**
 *
 * @author Lourdes
 */
public class vistaPaquetePersonalizado extends javax.swing.JInternalFrame {
 private final AlojamientoData alData = new AlojamientoData();
 private final MenuData menuData = new MenuData();
 private final TransporteData tranData = new TransporteData();
 private final PaqueteData paqData = new PaqueteData();
 private final EstadiaData estadiaData = new EstadiaData();
 private final PasajeData pasajeData = new PasajeData();
 private final ClienteData clienteData = new ClienteData();
 private final ClientePaqueteData clientePaqueteData = new ClientePaqueteData();
 private boolean paqueteModificado = false;
    /**
     * Creates new form vistaPaquetePersonalizado
     */
    public vistaPaquetePersonalizado() {
        initComponents();
        ButtonGroup grupoIndividual = new ButtonGroup();
        grupoIndividual.add(jrbIndividualSI);
        grupoIndividual.add(jrbIndividualNo);
        
        ButtonGroup grupoNinios = new ButtonGroup();
  
        
        bloquearCampos(contenedorInfo);
       jrbIndividualSI.setEnabled(false);
       jrbIndividualNo.setEnabled(false);
        bloquearCampos(panelCantPasajeros);
      
        jbConfirmar.setEnabled(false);
        jbConfirmarPaquete.setEnabled(false);
       
        cargarComboBoxEstadia();
        cargarComboBoxMenu();
        cargarComboBoxTransporte();
        actualizarCosto();
        cargarDatos();
 
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        contenedorInfo = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        tfDestino = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        dcFechaInicio = new com.toedter.calendar.JDateChooser();
        dcFechaFin = new com.toedter.calendar.JDateChooser();
        jLabel12 = new javax.swing.JLabel();
        tfCostoEstadia = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        tfCostoMenu = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        tfCostoTransporte = new javax.swing.JTextField();
        jcbEstadia = new javax.swing.JComboBox<>();
        jcbTransporte = new javax.swing.JComboBox<>();
        jcbMenu = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        tfCapacidad = new javax.swing.JTextField();
        jbModificar = new javax.swing.JButton();
        jbConfirmar = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jdCheckin = new com.toedter.calendar.JDateChooser();
        jdCheckout = new com.toedter.calendar.JDateChooser();
        jLabel21 = new javax.swing.JLabel();
        tfHabitaciones = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        panelCantPasajeros = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jsCantMayores = new javax.swing.JSpinner();
        jLabel16 = new javax.swing.JLabel();
        jsMenores1 = new javax.swing.JSpinner();
        jLabel17 = new javax.swing.JLabel();
        jsMenores2 = new javax.swing.JSpinner();
        panelPasajeroIndividual = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jrbIndividualSI = new javax.swing.JRadioButton();
        jrbIndividualNo = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        jbConfirmarPaquete = new javax.swing.JButton();
        jbDescartarPaquete1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        tfCostoTotal = new javax.swing.JTextField();

        setBackground(new java.awt.Color(39, 134, 188));
        setResizable(true);
        setPreferredSize(new java.awt.Dimension(1021, 800));

        jPanel1.setBackground(new java.awt.Color(39, 134, 188));

        contenedorInfo.setBackground(new java.awt.Color(39, 134, 188));

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("DESTINO:");

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("ESTADÍA:");

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("MENÚ:");

        jLabel5.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("TRANSPORTE:");

        tfDestino.setBackground(new java.awt.Color(255, 255, 255));
        tfDestino.setForeground(new java.awt.Color(0, 0, 0));
        tfDestino.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        jLabel10.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("FECHA INICIO:");

        jLabel11.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("FECHA FIN:");

        dcFechaInicio.setBackground(new java.awt.Color(255, 255, 255));
        dcFechaInicio.setForeground(new java.awt.Color(0, 0, 0));

        dcFechaFin.setBackground(new java.awt.Color(255, 255, 255));
        dcFechaFin.setForeground(new java.awt.Color(0, 0, 0));

        jLabel12.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("COSTO TOTAL:");

        tfCostoEstadia.setBackground(new java.awt.Color(255, 255, 255));
        tfCostoEstadia.setForeground(new java.awt.Color(0, 0, 0));
        tfCostoEstadia.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel13.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("COSTO:");

        tfCostoMenu.setBackground(new java.awt.Color(255, 255, 255));
        tfCostoMenu.setForeground(new java.awt.Color(0, 0, 0));

        jLabel14.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("COSTO:");

        tfCostoTransporte.setBackground(new java.awt.Color(255, 255, 255));
        tfCostoTransporte.setForeground(new java.awt.Color(0, 0, 0));
        tfCostoTransporte.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jcbEstadia.setBackground(new java.awt.Color(255, 255, 255));
        jcbEstadia.setForeground(new java.awt.Color(0, 0, 0));
        jcbEstadia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbEstadiaActionPerformed(evt);
            }
        });

        jcbTransporte.setBackground(new java.awt.Color(255, 255, 255));
        jcbTransporte.setForeground(new java.awt.Color(0, 0, 0));
        jcbTransporte.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbTransporteItemStateChanged(evt);
            }
        });
        jcbTransporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbTransporteActionPerformed(evt);
            }
        });

        jcbMenu.setBackground(new java.awt.Color(255, 255, 255));
        jcbMenu.setForeground(new java.awt.Color(0, 0, 0));
        jcbMenu.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbMenuItemStateChanged(evt);
            }
        });
        jcbMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbMenuActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("CAPACIDAD");

        tfCapacidad.setBackground(new java.awt.Color(255, 255, 255));
        tfCapacidad.setForeground(new java.awt.Color(0, 0, 0));
        tfCapacidad.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jbModificar.setBackground(new java.awt.Color(247, 151, 91));
        jbModificar.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jbModificar.setForeground(new java.awt.Color(0, 0, 0));
        jbModificar.setText("MODIFICAR");
        jbModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbModificarActionPerformed(evt);
            }
        });

        jbConfirmar.setBackground(new java.awt.Color(51, 255, 153));
        jbConfirmar.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jbConfirmar.setForeground(new java.awt.Color(0, 0, 0));
        jbConfirmar.setText("CONFIRMAR CAMBIOS");
        jbConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbConfirmarActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("CHECK-IN");

        jLabel20.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("CHECK-OUT");

        jdCheckin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jdCheckinKeyReleased(evt);
            }
        });

        jdCheckout.setBackground(new java.awt.Color(255, 255, 255));
        jdCheckout.setForeground(new java.awt.Color(0, 0, 0));
        jdCheckout.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jdCheckoutKeyReleased(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("HABITACIONES");

        tfHabitaciones.setBackground(new java.awt.Color(255, 255, 255));
        tfHabitaciones.setForeground(new java.awt.Color(0, 0, 0));
        tfHabitaciones.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        javax.swing.GroupLayout contenedorInfoLayout = new javax.swing.GroupLayout(contenedorInfo);
        contenedorInfo.setLayout(contenedorInfoLayout);
        contenedorInfoLayout.setHorizontalGroup(
            contenedorInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contenedorInfoLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(contenedorInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel19))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(contenedorInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, contenedorInfoLayout.createSequentialGroup()
                        .addGroup(contenedorInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jcbTransporte, 0, 210, Short.MAX_VALUE)
                            .addComponent(jcbMenu, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(118, 118, 118)
                        .addGroup(contenedorInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(tfCostoMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfCostoTransporte, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(contenedorInfoLayout.createSequentialGroup()
                        .addGroup(contenedorInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jcbEstadia, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tfDestino, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jdCheckin, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(contenedorInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(contenedorInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel15)
                                .addComponent(jLabel20)
                                .addComponent(jLabel13)
                                .addComponent(jLabel14))
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(contenedorInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dcFechaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(contenedorInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jdCheckout, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE)
                                .addComponent(tfCapacidad)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(contenedorInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel21)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(12, 12, 12)))
                .addGroup(contenedorInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(dcFechaFin, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                    .addComponent(tfCostoEstadia)
                    .addComponent(tfHabitaciones))
                .addGap(17, 17, 17))
            .addGroup(contenedorInfoLayout.createSequentialGroup()
                .addGroup(contenedorInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(contenedorInfoLayout.createSequentialGroup()
                        .addGap(239, 239, 239)
                        .addComponent(jbConfirmar)
                        .addGap(42, 42, 42)
                        .addComponent(jbModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(contenedorInfoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 1009, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        contenedorInfoLayout.setVerticalGroup(
            contenedorInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contenedorInfoLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(contenedorInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(contenedorInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(dcFechaFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel11))
                    .addGroup(contenedorInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(dcFechaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(contenedorInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(tfDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))))
                .addGap(18, 18, 18)
                .addGroup(contenedorInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(contenedorInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(jcbEstadia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel15)
                        .addComponent(tfCapacidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(contenedorInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel21)
                        .addComponent(tfHabitaciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(contenedorInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(contenedorInfoLayout.createSequentialGroup()
                        .addGroup(contenedorInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(contenedorInfoLayout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addGroup(contenedorInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jdCheckin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel19)))
                            .addGroup(contenedorInfoLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel20))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, contenedorInfoLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jdCheckout, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addGroup(contenedorInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jcbMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13)
                            .addComponent(tfCostoMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(contenedorInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(contenedorInfoLayout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addGroup(contenedorInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(jcbTransporte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(contenedorInfoLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(contenedorInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel14)
                                    .addComponent(tfCostoTransporte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(contenedorInfoLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(contenedorInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfCostoEstadia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))))
                .addGap(40, 40, 40)
                .addGroup(contenedorInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbConfirmar))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        panelCantPasajeros.setBackground(new java.awt.Color(39, 134, 188));

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("CANTIDAD DE MAYORES (INCLUYÉNDOSE):");

        jsCantMayores.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jsCantMayores.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        jsCantMayores.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jsCantMayoresStateChanged(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("NIÑOS +10 AÑOS:");

        jsMenores1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jsMenores1.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        jsMenores1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jsMenores1StateChanged(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("NIÑOS -10 AÑOS:");

        jsMenores2.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jsMenores2.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        jsMenores2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jsMenores2StateChanged(evt);
            }
        });

        panelPasajeroIndividual.setBackground(new java.awt.Color(39, 134, 188));
        panelPasajeroIndividual.setToolTipText("");

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("PAQUETE INDIVIDUAL:");

        jrbIndividualSI.setBackground(new java.awt.Color(23, 91, 129));
        jrbIndividualSI.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jrbIndividualSI.setText("SI");
        jrbIndividualSI.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jrbIndividualSIItemStateChanged(evt);
            }
        });
        jrbIndividualSI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbIndividualSIActionPerformed(evt);
            }
        });

        jrbIndividualNo.setBackground(new java.awt.Color(23, 91, 129));
        jrbIndividualNo.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jrbIndividualNo.setText("NO");
        jrbIndividualNo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jrbIndividualNoItemStateChanged(evt);
            }
        });
        jrbIndividualNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbIndividualNoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelPasajeroIndividualLayout = new javax.swing.GroupLayout(panelPasajeroIndividual);
        panelPasajeroIndividual.setLayout(panelPasajeroIndividualLayout);
        panelPasajeroIndividualLayout.setHorizontalGroup(
            panelPasajeroIndividualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPasajeroIndividualLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel7)
                .addGap(84, 84, 84)
                .addComponent(jrbIndividualSI, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(77, 77, 77)
                .addComponent(jrbIndividualNo, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelPasajeroIndividualLayout.setVerticalGroup(
            panelPasajeroIndividualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPasajeroIndividualLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(panelPasajeroIndividualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jrbIndividualSI)
                    .addComponent(jrbIndividualNo))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("PASAJEROS:");

        javax.swing.GroupLayout panelCantPasajerosLayout = new javax.swing.GroupLayout(panelCantPasajeros);
        panelCantPasajeros.setLayout(panelCantPasajerosLayout);
        panelCantPasajerosLayout.setHorizontalGroup(
            panelCantPasajerosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCantPasajerosLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jsCantMayores, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, Short.MAX_VALUE)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jsMenores1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jsMenores2, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelCantPasajerosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelPasajeroIndividual, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(panelCantPasajerosLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabel6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelCantPasajerosLayout.setVerticalGroup(
            panelCantPasajerosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCantPasajerosLayout.createSequentialGroup()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelPasajeroIndividual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelCantPasajerosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jsCantMayores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17)
                    .addComponent(jsMenores2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jsMenores1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelCantPasajeros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(contenedorInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(contenedorInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(panelCantPasajeros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(438, 438, 438))
        );

        jbConfirmarPaquete.setBackground(new java.awt.Color(51, 255, 153));
        jbConfirmarPaquete.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jbConfirmarPaquete.setForeground(new java.awt.Color(0, 0, 0));
        jbConfirmarPaquete.setText("CONFIRMAR PAQUETE");
        jbConfirmarPaquete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbConfirmarPaqueteActionPerformed(evt);
            }
        });

        jbDescartarPaquete1.setBackground(new java.awt.Color(247, 151, 91));
        jbDescartarPaquete1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jbDescartarPaquete1.setForeground(new java.awt.Color(0, 0, 0));
        jbDescartarPaquete1.setText("DESCARTAR PAQUETE");
        jbDescartarPaquete1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbDescartarPaquete1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("RESUMEN DEL PAQUETE");

        jLabel18.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("COSTO TOTAL DEL PAQUETE:");

        tfCostoTotal.setBackground(new java.awt.Color(255, 255, 255));
        tfCostoTotal.setForeground(new java.awt.Color(0, 0, 0));
        tfCostoTotal.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tfCostoTotal.setText("COSTO");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(380, 380, 380)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(245, 245, 245)
                                        .addComponent(jbConfirmarPaquete, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(51, 51, 51))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(jLabel18)
                                        .addGap(33, 33, 33)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfCostoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jbDescartarPaquete1, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(tfCostoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbConfirmarPaquete, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbDescartarPaquete1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(50, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jcbMenuItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbMenuItemStateChanged
          mostrarDatosMenu();
          actualizarCosto();
    }//GEN-LAST:event_jcbMenuItemStateChanged

    private void jcbTransporteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbTransporteItemStateChanged
        mostrarDatosTransporte();
        actualizarCosto();
    }//GEN-LAST:event_jcbTransporteItemStateChanged

    private void jcbEstadiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbEstadiaActionPerformed
         mostrarDatosEstadia();
         actualizarCosto();
    }//GEN-LAST:event_jcbEstadiaActionPerformed

    private void jcbMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbMenuActionPerformed
         mostrarDatosMenu();
         actualizarCosto();
    }//GEN-LAST:event_jcbMenuActionPerformed

    private void jcbTransporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbTransporteActionPerformed
         mostrarDatosTransporte();
         actualizarCosto();
    }//GEN-LAST:event_jcbTransporteActionPerformed

    private void jrbIndividualSIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbIndividualSIActionPerformed
        jbConfirmarPaquete.setEnabled(true);
        actualizarCosto();
       
    }//GEN-LAST:event_jrbIndividualSIActionPerformed

    private void jrbIndividualNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbIndividualNoActionPerformed
       desbloquearCampos(panelCantPasajeros);
        jbConfirmarPaquete.setEnabled(true);
    }//GEN-LAST:event_jrbIndividualNoActionPerformed

    private void jbModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbModificarActionPerformed
        jbConfirmar.setEnabled(true);
        jbModificar.setEnabled(false);
        desbloquearCamposEspecificos();
       actualizarCosto();
    }//GEN-LAST:event_jbModificarActionPerformed

    private void jbConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbConfirmarActionPerformed
        if(validarCamposVacios(contenedorInfo)){
            JOptionPane.showMessageDialog(this, "Debe llenar todos los campos.");
            return;
        }else{
            confirmarCambios();
            JOptionPane.showMessageDialog(this, "Se confirmaron los cambios en el paquete.");
            jbConfirmar.setEnabled(false);
            bloquearCampos(contenedorInfo);
            
        }
       jrbIndividualSI.setEnabled(true);
       jrbIndividualNo.setEnabled(true);
        paqueteModificado = true;
        jbConfirmar.setEnabled(false);
      
       
        actualizarCosto();
    }//GEN-LAST:event_jbConfirmarActionPerformed

    private void jbConfirmarPaqueteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbConfirmarPaqueteActionPerformed
       crearPaquete();
      actualizarCosto();
        
        
       
    }//GEN-LAST:event_jbConfirmarPaqueteActionPerformed

    private void jsCantMayoresStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jsCantMayoresStateChanged

       actualizarCosto();
    }//GEN-LAST:event_jsCantMayoresStateChanged

    private void jsMenores1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jsMenores1StateChanged
        actualizarCosto();       
    }//GEN-LAST:event_jsMenores1StateChanged

    private void jsMenores2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jsMenores2StateChanged
        actualizarCosto();
    }//GEN-LAST:event_jsMenores2StateChanged

    private void jrbIndividualSIItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jrbIndividualSIItemStateChanged
        actualizarCosto();
    }//GEN-LAST:event_jrbIndividualSIItemStateChanged

    private void jrbIndividualNoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jrbIndividualNoItemStateChanged
        actualizarCosto();      
    }//GEN-LAST:event_jrbIndividualNoItemStateChanged

    private void jbDescartarPaquete1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbDescartarPaquete1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jbDescartarPaquete1ActionPerformed

    private void jdCheckinKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jdCheckinKeyReleased
        actualizarCosto();
    }//GEN-LAST:event_jdCheckinKeyReleased

    private void jdCheckoutKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jdCheckoutKeyReleased
        actualizarCosto();
    }//GEN-LAST:event_jdCheckoutKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel contenedorInfo;
    private com.toedter.calendar.JDateChooser dcFechaFin;
    private com.toedter.calendar.JDateChooser dcFechaInicio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton jbConfirmar;
    private javax.swing.JButton jbConfirmarPaquete;
    private javax.swing.JButton jbDescartarPaquete1;
    private javax.swing.JButton jbModificar;
    private javax.swing.JComboBox<String> jcbEstadia;
    private javax.swing.JComboBox<String> jcbMenu;
    private javax.swing.JComboBox<String> jcbTransporte;
    private com.toedter.calendar.JDateChooser jdCheckin;
    private com.toedter.calendar.JDateChooser jdCheckout;
    private javax.swing.JRadioButton jrbIndividualNo;
    private javax.swing.JRadioButton jrbIndividualSI;
    private javax.swing.JSpinner jsCantMayores;
    private javax.swing.JSpinner jsMenores1;
    private javax.swing.JSpinner jsMenores2;
    private javax.swing.JPanel panelCantPasajeros;
    private javax.swing.JPanel panelPasajeroIndividual;
    private javax.swing.JTextField tfCapacidad;
    private javax.swing.JTextField tfCostoEstadia;
    private javax.swing.JTextField tfCostoMenu;
    private javax.swing.JTextField tfCostoTotal;
    private javax.swing.JTextField tfCostoTransporte;
    private javax.swing.JTextField tfDestino;
    private javax.swing.JTextField tfHabitaciones;
    // End of variables declaration//GEN-END:variables


 private void aa(){
     JOptionPane.showMessageDialog(this, alojamientoSeleccionado.getIdAlojamiento() + " --" + alojamientoSeleccionado.getIdDestino().getIdDestino() +"-----"+ alojamientoSeleccionado.getNombre());
 }
    
private boolean validarCamposVacios(JPanel jpanel) {
    for (Component c : jpanel.getComponents()) {
        if (c instanceof JTextField) {
            JTextField t = (JTextField) c;
            if (t.getText().trim().isEmpty()) {  // Verifica si el campo está vacío
                return true;
            }
        }
        
        if (c instanceof JComboBox) {
            JComboBox<?> combo = (JComboBox<?>) c;
            if (combo.getSelectedItem() == null || combo.getSelectedIndex() == -1) { // Verifica si no hay selección
                return true;
            }
        }
        
        if(c instanceof JDateChooser){
           JDateChooser d = (JDateChooser) c;
           if(d.getDate() == null){
               return true;
            }
        }
        
    }
    return false; // No hay campos vacíos
}
 
 private void bloquearCampos(JPanel jpanel) {
    for (Component c : jpanel.getComponents()) {
        if (c instanceof JTextField) {
            JTextField t = (JTextField) c;
            t.setEnabled(false); // Deshabilita el JTextField
        }
        
        
        if (c instanceof JComboBox) {
            JComboBox<?> combo = (JComboBox<?>) c;
            combo.setEnabled(false); // Deshabilita el JComboBox
        }
        
        if (c instanceof JCheckBox) {
            JCheckBox cb = (JCheckBox) c;
          cb.setEnabled(false); // Deshabilita el JCheckBox
        }
        
        if(c instanceof JDateChooser) {
            JDateChooser t = (JDateChooser) c;
            t.setEnabled(false);
        }
        
        if(c instanceof JSpinner){
            JSpinner t = (JSpinner) c;
            t.setEnabled(false);
        }
        
    }
    
     
}
 
  private void desbloquearCampos(JPanel jpanel) {
    for (Component c : jpanel.getComponents()) {
        if (c instanceof JTextField) {
            JTextField t = (JTextField) c;
            t.setEnabled(true); // habilita el JTextField
        }
        
        
        if (c instanceof JComboBox) {
            JComboBox<?> combo = (JComboBox<?>) c;
            combo.setEnabled(true); // habilita el JComboBox
        }
        
        if (c instanceof JCheckBox) {
            JCheckBox checkBox = (JCheckBox) c;
            checkBox.setEnabled(true); // habilita el JCheckBox
        }
        
        if(c instanceof JDateChooser) {
            JDateChooser t = (JDateChooser) c;
            t.setEnabled(true);
        }
        
         if(c instanceof JSpinner){
            JSpinner t = (JSpinner) c;
            t.setEnabled(true);
        }
        
        
    }
}
  

  
  private void desbloquearCamposEspecificos(){
      dcFechaFin.setEnabled(true);
      dcFechaInicio.setEnabled(true);
      tfCapacidad.setEnabled(true);
      jcbEstadia.setEnabled(true);
      jcbMenu.setEnabled(true);
      jcbTransporte.setEnabled(true);
  }
  
  private void cargarDatos(){
      try{
          
          tfDestino.setText(destinoSeleccionado.toString());
          dcFechaInicio.setDate(fechInicio);
          dcFechaFin.setDate(fechFin);
          
          jcbEstadia.setSelectedItem(alojamientoSeleccionado.getNombre());
          tfCapacidad.setText(String.valueOf(alojamientoSeleccionado.getCapacidad()));
          tfHabitaciones.setText(String.valueOf(alojamientoSeleccionado.getNroAmbientes()));
          jdCheckin.setDate((estadiaSeleccionada.getFechaCheckIn()));
          jdCheckout.setDate((estadiaSeleccionada.getFechaCheckOut()));
          tfCostoEstadia.setText(String.valueOf(estadiaSeleccionada.getTotal()));
          
          jcbMenu.setSelectedItem(menuSeleccionado.getTipo());
          tfCostoMenu.setText(String.valueOf(menuSeleccionado.getPorcentaje()));
          
          jcbTransporte.setSelectedItem(transporteSeleccionado.getTipo());
          tfCostoTransporte.setText(String.valueOf(transporteSeleccionado.getCosto()));
          
          
      }catch(NullPointerException ex){
          JOptionPane.showMessageDialog(this, "Error al cargar datos null");
      }catch(ClassCastException | NumberFormatException ex){
         JOptionPane.showMessageDialog(this, "Error al cargar datos. " +ex);
     }
  }
  

   private void cargarComboBoxEstadia(){

   int capacidad = (alojamientoSeleccionado.getCapacidad());
   
   List<Alojamiento> lista = alData.buscarAlojamientoCapacidad(capacidad,destinoSeleccionado.getIdDestino());
   
   if(lista.isEmpty()){
       JOptionPane.showMessageDialog(this, "No hay alojamientos disponibles.");
   }else{
   for(Alojamiento alo : lista){ 
       jcbEstadia.addItem(alo.getNombre());
   } 
   
   }
      }
   
   
   private void cargarComboBoxMenu(){
        jcbMenu.removeAllItems();
    for(MenuPension m : menuData.listarMenus()){
        jcbMenu.addItem(m.getTipo());

    }    
   }
   
    private void cargarComboBoxTransporte(){
         for(String t : tranData.obtenerTodosLosTipos()){
        jcbTransporte.addItem(t);
    }
    }
      
  private void confirmarCambios(){
     try{
         java.util.Date inicio = jdCheckin.getDate();
         java.util.Date fin =   jdCheckout.getDate();
      double Total = Double.parseDouble(tfCostoEstadia.getText());
      alojamientoSeleccionado = alData.buscarAlojamientoNombre(String.valueOf(jcbEstadia.getSelectedItem()));
      estadiaSeleccionada = new Estadia(alojamientoSeleccionado, inicio, fin, Total);
      
      String tipomenu = (String) jcbMenu.getSelectedItem();
      
      menuSeleccionado = menuData.buscarMenuPorTipo(tipomenu);
       
      
      int asiento = pasajeSeleccionado.getAsiento();
      String tipoTransporte = (String) jcbTransporte.getSelectedItem();
     transporteSeleccionado = tranData.obtenerTransportePorTipo(tipoTransporte);
         System.out.println(transporteSeleccionado.getTipo());
       pasajeSeleccionado = new Pasaje( pasajeSeleccionado.getIdPasaje(),transporteSeleccionado,origenSeleccionado,destinoSeleccionado,asiento);
       
     }catch(NullPointerException ex){
         JOptionPane.showMessageDialog(this, "Error. Hay datos en NULL. " +ex);
     }catch(ClassCastException | NumberFormatException ex){
         JOptionPane.showMessageDialog(this, "Error al actualizar datos. " +ex);
     }
  }
  
  
  private void mostrarDatosEstadia(){
      Alojamiento aloj = alData.buscarAlojamientoNombre(String.valueOf(jcbEstadia.getSelectedItem()));
      tfCapacidad.setText(String.valueOf(aloj.getCapacidad())); 
      tfHabitaciones.setText(String.valueOf(aloj.getNroAmbientes())); 
     double precionoche = aloj.getPrecioPorNoche();
     java.util.Date fechaCheckIn = estadiaSeleccionada.getFechaCheckIn();
     java.util.Date fechaCheckOut =  estadiaSeleccionada.getFechaCheckOut();
     
      
           LocalDate inicio = fechaCheckIn.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
           LocalDate fin = fechaCheckOut.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
           long diasEntre = ChronoUnit.DAYS.between(inicio, fin);
            
            double Total = precionoche * diasEntre;
        tfCostoEstadia.setText(String.valueOf(Total));
     actualizarCosto();
  }
  
  private void mostrarDatosMenu(){
      String tipo = (String) jcbMenu.getSelectedItem();
      MenuPension menu = menuData.buscarMenuPorTipo(tipo);
      
      tfCostoMenu.setText(String.valueOf(menu.getPorcentaje()));
      actualizarCosto();
  }
  
  private void mostrarDatosTransporte(){
      String tipo = (String) jcbTransporte.getSelectedItem();
       tfCostoTransporte.setText(String.valueOf(tranData.obtenerCostoPorTipo(tipo)));
       actualizarCosto();
  }
  
  
private void crearPaquete(){
    try{

   int cantPasajerosAdultos = (int) jsCantMayores.getValue();
        int cantPasajerosNinios = (int) jsMenores1.getValue();
        int cantPasajerosNiniosMenores = (int) jsMenores2.getValue();
        
        // Calcular el total de pasajeros
        int totalPasajeros = cantPasajerosAdultos + cantPasajerosNinios + cantPasajerosNiniosMenores;

        // Obtener costos base
        double totalEstadia = estadiaSeleccionada.getTotal();
        double totalMenu = menuSeleccionado.getPorcentaje();
        double totalTransporte = transporteSeleccionado.getCosto();
        double costoBase = totalEstadia + totalTransporte;
        double costoMenu = costoBase * totalMenu;

        // Inicializar el precio total
        double precioTotal = 0;
        double precioAdultos = 0;
        double precioNinios = 0;
        double precioNiniosMenores = 0;

        // Verificar si es un paquete individual
        if (jrbIndividualSI.isSelected()) {
            // Costo para una sola persona
            precioTotal = costoBase + costoMenu;
        } else if (jrbIndividualNo.isSelected()) {
            // Cálculo para varios pasajeros
            precioAdultos = (costoBase + costoMenu) * cantPasajerosAdultos;
            precioNinios = (costoBase + costoMenu) * cantPasajerosNinios;// 20% de descuento para niños
            precioNiniosMenores = (costoBase + costoMenu) * cantPasajerosNiniosMenores * 0.5; // 50% de descuento para menores

            // Sumar todos los costos
            precioTotal = precioAdultos + precioNinios + precioNiniosMenores;
        }

        // Aplicar penalización si el paquete ha sido modificado
        if (paqueteModificado) {
            precioTotal *= 1.10; // Aumentar el precio total en un 10%
        }
    
         switch(temporada){
           case "temporada_alta" -> precioTotal *= 1.30;
           case "temporada_media" -> precioTotal *= 1.15;
       }
    estadiaData.guardarEstadia(estadiaSeleccionada);
    pasajeData.agregarPasaje(pasajeSeleccionado);
    clienteData.guardarCliente(clienteSeleccionado);
    
    Paquete paquete = new Paquete(estadiaSeleccionada,
            pasajeSeleccionado,menuSeleccionado, origenSeleccionado, destinoSeleccionado,fechInicio,fechFin,temporada,totalPasajeros,medioPago,
               true,false,precioTotal);
    paqData.guardarPaquete(paquete);
    
    ClientePaquete clientePaquete  = new ClientePaquete(clienteSeleccionado,paquete);
    clientePaqueteData.guardarClientePaquete(clientePaquete);
   }catch(NullPointerException ex){
         JOptionPane.showMessageDialog(this, "Error. Hay datos en NULL. " +ex);
   }catch(ClassCastException | NumberFormatException ex){
         JOptionPane.showMessageDialog(this, "Error al armar paquete. " +ex);
}
} 

private void actualizarCosto() {
     
    try {
       
        int cantPasajerosAdultos = (int) jsCantMayores.getValue();
        int cantPasajerosNinios = (int) jsMenores1.getValue();
        int cantPasajerosNiniosMenores = (int) jsMenores2.getValue();
        
       
        int totalPasajeros = cantPasajerosAdultos + cantPasajerosNinios + cantPasajerosNiniosMenores;

        // Obtener costos base
        double totalEstadia = estadiaSeleccionada.getTotal();
        double totalMenu = menuSeleccionado.getPorcentaje();
        double totalTransporte = transporteSeleccionado.getCosto();
        double costoBase = totalEstadia + totalTransporte;
        double costoMenu = costoBase * totalMenu;
        
       
        double precioTotal = 0;
        double precioAdultos = 0;
        double precioNinios = 0;
        
     
        if (jrbIndividualSI.isSelected()) {
            // Costo para una sola persona
            precioTotal = costoBase + costoMenu;
        } else if (jrbIndividualNo.isSelected()) {
            // Cálculo para varios pasajeros
            precioAdultos = (costoBase + costoMenu) * cantPasajerosAdultos;
            precioNinios = ((costoBase + costoMenu) * cantPasajerosNinios ); // Niños 20% descuento
            double precioNiniosMenores = ((costoBase + costoMenu) * cantPasajerosNiniosMenores * 0.5); // Menores 50% descuento

            // Sumar todos los costos
            precioTotal = precioAdultos + precioNinios + precioNiniosMenores;
        }

        // Aplicar penalización si es un paquete modificado
        if (paqueteModificado) {
            precioTotal *= 1.10; // Aplicar un 10% extra
        }
        
       switch(temporada){
           case "temporada_alta" -> precioTotal *= 1.30;
           case "temporada_media" -> precioTotal *= 1.15;
       }
        
        // Actualizar el campo de texto con el costo total
        tfCostoTotal.setText(String.format("%.2f", precioTotal));
        
    } catch (NullPointerException | ClassCastException | NumberFormatException ex) {
        JOptionPane.showMessageDialog(this, "Error al calcular el costo total: " + ex.getMessage());
    }
   
}
}
